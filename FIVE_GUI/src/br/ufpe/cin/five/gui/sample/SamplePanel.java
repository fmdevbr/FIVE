/**
 * Copyright 2011 Federal University of Pernambuco. All Rights Reserved. Use is
 * subject to license terms.
 *
 * This file is part of FIVE (Framework for an Integrated Voice Environment).
 *
 */
package br.ufpe.cin.five.gui.sample;

import br.ufpe.cin.five.core.sample.Environment;
import br.ufpe.cin.five.core.sample.Sample;
import br.ufpe.cin.five.core.sample.SampleFilter;
import br.ufpe.cin.five.core.speaker.Gender;
import br.ufpe.cin.five.core.speaker.Speaker;
import br.ufpe.cin.five.core.utterance.Utterance;
import br.ufpe.cin.five.exception.RegisterException;
import br.ufpe.cin.five.facade.Facade;
import br.ufpe.cin.five.gui.dialogs.FilterDialog;
import br.ufpe.cin.five.gui.dialogs.ResultsDialog;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;

/**
 *
 * @author Alexandre
 */
public class SamplePanel extends JPanel {

    private static final Logger logger = Logger.getLogger(SamplePanel.class);
    Facade facade = Facade.getInstance();
    private int selectedLine;
    private DefaultTableModel model;
    private FilterDialog filterDialog;
    private List<Utterance> utterancesFilter;
    private List<Speaker> speakersFilter;

    /**
     * Creates new form DataBasePanel
     */
    public SamplePanel() {
        logger.info("Inicializando DataBasePanel.");
        initComponents();

        utterancesFilter = new ArrayList<Utterance>();
        speakersFilter = new ArrayList<Speaker>();

        Environment[] environments = Environment.values();
        String[] environmentDescriptions = new String[environments.length + 1];
        environmentDescriptions[0] = "";
        for (int i = 1; i < environmentDescriptions.length; i++) {
            environmentDescriptions[i] = environments[i - 1].toString();
        }
        cbEnvironment.setModel(new javax.swing.DefaultComboBoxModel(environmentDescriptions));

        Gender[] genders = Gender.values();
        String[] genderDescriptions = new String[genders.length + 1];
        genderDescriptions[0] = "";
        for (int i = 1; i < genderDescriptions.length; i++) {
            genderDescriptions[i] = genders[i - 1].toString();
        }
        cbGender.setModel(new javax.swing.DefaultComboBoxModel(genderDescriptions));  
        
        this.btDivision.setVisible(false);
    }

    public int getSelectedLine() {
        return selectedLine;
    }

    public void setSelectedLine(int selectedLine) {
        this.selectedLine = selectedLine;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGender = new javax.swing.ButtonGroup();
        buttonGroupBits = new javax.swing.ButtonGroup();
        buttonGroupSampleRate = new javax.swing.ButtonGroup();
        buttonGroupMonoStereo = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        btInsert = new javax.swing.JButton();
        btUpdate = new javax.swing.JButton();
        btRemove = new javax.swing.JButton();
        btCalcSNR = new javax.swing.JButton();
        btImport = new javax.swing.JButton();
        btTranscription = new javax.swing.JButton();
        btDivision = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btSearch = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jlUtterance = new javax.swing.JLabel();
        jlSpeaker = new javax.swing.JLabel();
        jlGender = new javax.swing.JLabel();
        cbGender = new javax.swing.JComboBox();
        jlEnvironment = new javax.swing.JLabel();
        cbEnvironment = new javax.swing.JComboBox();
        cbSNR = new javax.swing.JComboBox();
        jlSNR = new javax.swing.JLabel();
        tfMinAge = new javax.swing.JTextField();
        jlAge = new javax.swing.JLabel();
        tfMaxAge = new javax.swing.JTextField();
        tfSpeakers = new javax.swing.JTextField();
        tfUtterances = new javax.swing.JTextField();
        btAddSpeaker = new javax.swing.JButton();
        btAddUtterance = new javax.swing.JButton();
        jlSearchNumbers = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jLabel8.setText("Amostras"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "id", "Locutor", "Locução", "Arquivo", "Ambiente", "SNR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 886, Short.MAX_VALUE)
                    .addComponent(jLabel8))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btInsert.setText("Incluir"); // NOI18N
        btInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInsertActionPerformed(evt);
            }
        });

        btUpdate.setText("Alterar"); // NOI18N
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });

        btRemove.setText("Excluir"); // NOI18N
        btRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoveActionPerformed(evt);
            }
        });

        btCalcSNR.setText("Calcular SNR"); // NOI18N
        btCalcSNR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCalcSNRActionPerformed(evt);
            }
        });

        btImport.setText("Importar"); // NOI18N
        btImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImportActionPerformed(evt);
            }
        });

        btTranscription.setText("Transcrever"); // NOI18N
        btTranscription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTranscriptionActionPerformed(evt);
            }
        });

        btDivision.setText("Dividir"); // NOI18N
        btDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDivisionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btCalcSNR)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btImport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btTranscription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btDivision)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btInsert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btRemove)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btRemove)
                    .addComponent(btUpdate)
                    .addComponent(btInsert)
                    .addComponent(btCalcSNR)
                    .addComponent(btImport)
                    .addComponent(btTranscription)
                    .addComponent(btDivision))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btSearch.setText("Pesquisar"); // NOI18N
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btSearch)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(btSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlUtterance.setText("Locução:"); // NOI18N

        jlSpeaker.setText("Locutor:"); // NOI18N

        jlGender.setText("Sexo:"); // NOI18N

        cbGender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Masculino", "Feminino" }));

        jlEnvironment.setText("Ambiente:"); // NOI18N

        cbSNR.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "0 dB", "5 dB", "10 dB", "15 dB" }));

        jlSNR.setText("SNR:"); // NOI18N

        jlAge.setText("Idade:"); // NOI18N

        btAddSpeaker.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/ufpe/cin/five/images/lupa_icone.png"))); // NOI18N
        btAddSpeaker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddSpeakerActionPerformed(evt);
            }
        });

        btAddUtterance.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/ufpe/cin/five/images/lupa_icone.png"))); // NOI18N
        btAddUtterance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddUtteranceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlSpeaker)
                    .addComponent(jlUtterance)
                    .addComponent(tfUtterances, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(tfSpeakers))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btAddSpeaker, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAddUtterance, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlGender)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cbEnvironment, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jlEnvironment))
                            .addComponent(cbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlAge)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbSNR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlSNR)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(tfMinAge, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(tfMaxAge, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(48, 48, 48))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jlGender)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jlAge)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tfMinAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfMaxAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jlSNR)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbSNR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jlEnvironment)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbEnvironment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btAddSpeaker, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jlSpeaker)
                                .addGap(26, 26, 26))
                            .addComponent(tfSpeakers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jlUtterance)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfUtterances, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btAddUtterance, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlSearchNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jlSearchNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoveActionPerformed
        logger.info("Botão btRemove pressionado.");
        if (JOptionPane.showConfirmDialog(null, "Deseja excluir a amostra?", "Excluir amostra", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            logger.info("Usuário confirmou a exclusao.");
            int line = jTable1.getSelectedRow();
            if (line >= 0) {
                try {
                    int id = Integer.parseInt(jTable1.getValueAt(line, 0).toString());
                    Sample sample = facade.searchSample(id);

                    facade.removeSample(sample);
                    removeLine(line, jTable1);

                    logger.info("Amostra excluía com sucesso!");
                    JOptionPane.showMessageDialog(null, "Amostra excluída com sucesso!", "Excluir amostra", JOptionPane.INFORMATION_MESSAGE);
                } catch (RegisterException ex) {
                    logger.error(ex);
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
                btSearchActionPerformed(evt);
            }
        }
}//GEN-LAST:event_btRemoveActionPerformed

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
        logger.info("Botão btUpdate pressionado. Abrindo DataBaseDialog.");
        int line = jTable1.getSelectedRow();
        if (line >= 0) {
            try {
                int id = Integer.parseInt(jTable1.getValueAt(line, 0).toString());
                Sample sample = facade.searchSample(id);
                SampleDialog dialog = new SampleDialog(null, true, sample, "", 1);
                dialog.pack();
                dialog.setLocationRelativeTo(this);
                dialog.setVisible(true);
                removeLine(line, jTable1);
                btSearchActionPerformed(evt);
            } catch (RegisterException ex) {
                logger.error(ex.getMessage());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
}//GEN-LAST:event_btUpdateActionPerformed

    private void btInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInsertActionPerformed
        logger.info("Botão btInsert pressionado.");
        SampleDialog dialog = new SampleDialog(null, true, null, null, 0);                       
        dialog.pack();
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);        
        if(dialog.getDefaultCloseOperation()!=0) { // DO_NOTHING_ON_CLOSE
            btSearchActionPerformed(evt);
        }                
}//GEN-LAST:event_btInsertActionPerformed

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        logger.info("Botão btSearch pressionado.");
        removeAllLinesTableSample();

        logger.info("Criando filtro da pesquisa.");
        SampleFilter filter = new SampleFilter();

        logger.info("Speakers: "+ speakersFilter);
        logger.info("Utterances: "+ speakersFilter);
        
        filter.setSpeakers(speakersFilter);
        filter.setUtterances(utterancesFilter);

        if (!cbEnvironment.getSelectedItem().toString().equals("")) {
            filter.setEnvironment(Environment.valueOf((String) cbEnvironment.getSelectedItem()));
        }
        if (!cbGender.getSelectedItem().toString().equals("")) {
            filter.setGender(Gender.valueOf((String) cbGender.getSelectedItem()));
        }
        if (!tfMinAge.getText().equals("")) {
            filter.setMinAge(Integer.parseInt(tfMinAge.getText()));
        }
        if (!tfMaxAge.getText().equals("")) {
            filter.setMaxAge(Integer.parseInt(tfMaxAge.getText()));
        }
        if (cbSNR.getSelectedIndex() != 0) {
            filter.setSnr(Integer.parseInt(cbSNR.getSelectedItem().toString().split(" ")[0]));
        }

        try {
            List<Sample> samples = facade.searchSample(filter);
            for (Sample sample : samples) {
                addLineTableSample(sample);
            }
            jlSearchNumbers.setText(samples.size() + " Amostras pesquisadas.");
            logger.info(samples.size() + " Amostras pesquisadas.");
        } catch (RegisterException ex) {
            logger.error(ex.getMessage());
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
}//GEN-LAST:event_btSearchActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        if (evt.getClickCount() == 2) {
            btUpdateActionPerformed(null);
        }
    }//GEN-LAST:event_jTable1MousePressed

    private void btImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImportActionPerformed
        logger.info("Botão btImport pressionado.");
        SampleImportDialog dialog = new SampleImportDialog(null, true);
        dialog.pack();
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_btImportActionPerformed

    private void btCalcSNRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCalcSNRActionPerformed
        logger.info("Botão btCalcSNR pressionado.");
        removeAllLinesTableSample();       
        logger.info("Criando filtro da pesquisa.");        
        SampleFilter filter = new SampleFilter();
        filter.setSpeakers(speakersFilter);
        filter.setUtterances(utterancesFilter);
        if (!cbEnvironment.getSelectedItem().toString().equals("")) {
            filter.setEnvironment(Environment.valueOf((String) cbEnvironment.getSelectedItem()));
        }
        if (!cbGender.getSelectedItem().toString().equals("")) {
            filter.setGender(Gender.valueOf((String) cbGender.getSelectedItem()));
        }
        if (!tfMinAge.getText().equals("")) {
            filter.setMinAge(Integer.parseInt(tfMinAge.getText()));
        }
        if (!tfMaxAge.getText().equals("")) {
            filter.setMaxAge(Integer.parseInt(tfMaxAge.getText()));
        }
        if (cbSNR.getSelectedIndex() != 0) {
            filter.setSnr(Integer.parseInt(cbSNR.getSelectedItem().toString().split(" ")[0]));
        }

        try {
            List<Sample> samples = facade.searchSample(filter);
            ResultsDialog dialog = new ResultsDialog(null, true, samples);
            dialog.pack();
            dialog.setLocationRelativeTo(this);
            dialog.setVisible(true);
        } catch (RegisterException ex) {
            logger.error(ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btCalcSNRActionPerformed

    private void btAddSpeakerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddSpeakerActionPerformed
        logger.info("Botão btAddSpeaker pressionado.");
        this.filterDialog = new FilterDialog(null, true, 1, new ArrayList<Object>(this.speakersFilter));
        filterDialog.pack();
        filterDialog.setLocationRelativeTo(this);
        filterDialog.setVisible(true);
        this.speakersFilter = new ArrayList<Speaker>();
        String cbString = "";
        for (int i = 0; i < filterDialog.getList().size(); i++) {
            Speaker speaker = (Speaker) filterDialog.getList().get(i);
            if (i != filterDialog.getList().size() - 1) {
                cbString += speaker.getName() + " ; ";
            } else {
                cbString += speaker.getName();
            }
            speakersFilter.add(speaker);
        }
        tfSpeakers.setText(cbString);
}//GEN-LAST:event_btAddSpeakerActionPerformed

    private void btAddUtteranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddUtteranceActionPerformed
        logger.info("Botão btAddUtterance pressionado.");
        this.filterDialog = new FilterDialog(null, true, 0, new ArrayList<Object>(this.utterancesFilter));
        filterDialog.pack();
        filterDialog.setLocationRelativeTo(this);
        filterDialog.setVisible(true);
        this.utterancesFilter = new ArrayList<Utterance>();
        String cbString = "";
        for (int i = 0; i < filterDialog.getList().size(); i++) {
            Utterance utterance = (Utterance) filterDialog.getList().get(i);
            if (i != filterDialog.getList().size() - 1) {
                cbString += utterance.getDescription() + " ; ";
            } else {
                cbString += utterance.getDescription();
            }
            utterancesFilter.add(utterance);
        }
        tfUtterances.setText(cbString);
    }//GEN-LAST:event_btAddUtteranceActionPerformed

    private void btTranscriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTranscriptionActionPerformed
        logger.info("Botão btTranscriptionpressionado.");
        SampleTranscriptionDialog dialog = new SampleTranscriptionDialog(null, true);
        dialog.pack();
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_btTranscriptionActionPerformed

    private void btDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDivisionActionPerformed
        logger.info("Botão btDivision pressionado.");
        
        logger.info("Criando filtro da pesquisa.");        
        SampleFilter filter = new SampleFilter();
        filter.setSpeakers(speakersFilter);
        filter.setUtterances(utterancesFilter);
        if (!cbEnvironment.getSelectedItem().toString().equals("")) {
            filter.setEnvironment(Environment.valueOf((String) cbEnvironment.getSelectedItem()));
        }
        if (!cbGender.getSelectedItem().toString().equals("")) {
            filter.setGender(Gender.valueOf((String) cbGender.getSelectedItem()));
        }
        if (!tfMinAge.getText().equals("")) {
            filter.setMinAge(Integer.parseInt(tfMinAge.getText()));
        }
        if (!tfMaxAge.getText().equals("")) {
            filter.setMaxAge(Integer.parseInt(tfMaxAge.getText()));
        }
        if (cbSNR.getSelectedIndex() != 0) {
            filter.setSnr(Integer.parseInt(cbSNR.getSelectedItem().toString().split(" ")[0]));
        }       
        
        SampleDivisionDialog dialog = new SampleDivisionDialog(null, true, filter);
        dialog.pack();
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);                
    }//GEN-LAST:event_btDivisionActionPerformed

    protected void addLineTableSample(Sample sample) {

        try {
            Utterance utterance = sample.getUtterance();
            Speaker speaker = sample.getSpeaker();
            model = (DefaultTableModel) jTable1.getModel();
            model.addRow(new Object[]{sample.getId(), speaker, utterance, sample, sample.getEnvironment(), sample.getSnr()});
        } catch (Exception ex) {
            logger.error(ex.getMessage());
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }

    public void addAllLinesTableSample() {
        removeAllLinesTableSample();
        for (Sample sample : facade.getProject().getSamples()) {
            addLineTableSample(sample);
        }
    }

    protected void updateLineTableSample(String sample, int line) {
        model = (DefaultTableModel) jTable1.getModel();
        model.setValueAt(sample, line, 0);
    }

    private void removeAllLinesTableSample() {
        model = (DefaultTableModel) jTable1.getModel();
        while (model.getRowCount() >= 1) {
            model.removeRow(0);
        }
    }

    private void removeLine(int line, JTable table) {
        model = (DefaultTableModel) table.getModel();
        model.removeRow(line);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddSpeaker;
    private javax.swing.JButton btAddUtterance;
    private javax.swing.JButton btCalcSNR;
    private javax.swing.JButton btDivision;
    private javax.swing.JButton btImport;
    private javax.swing.JButton btInsert;
    private javax.swing.JButton btRemove;
    private javax.swing.JButton btSearch;
    private javax.swing.JButton btTranscription;
    private javax.swing.JButton btUpdate;
    private javax.swing.ButtonGroup buttonGroupBits;
    private javax.swing.ButtonGroup buttonGroupGender;
    private javax.swing.ButtonGroup buttonGroupMonoStereo;
    private javax.swing.ButtonGroup buttonGroupSampleRate;
    private javax.swing.JComboBox cbEnvironment;
    private javax.swing.JComboBox cbGender;
    private javax.swing.JComboBox cbSNR;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jlAge;
    private javax.swing.JLabel jlEnvironment;
    private javax.swing.JLabel jlGender;
    private javax.swing.JLabel jlSNR;
    private javax.swing.JLabel jlSearchNumbers;
    private javax.swing.JLabel jlSpeaker;
    private javax.swing.JLabel jlUtterance;
    private javax.swing.JTextField tfMaxAge;
    private javax.swing.JTextField tfMinAge;
    private javax.swing.JTextField tfSpeakers;
    private javax.swing.JTextField tfUtterances;
    // End of variables declaration//GEN-END:variables
}
